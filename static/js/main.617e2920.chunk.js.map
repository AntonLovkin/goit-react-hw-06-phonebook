{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Filter.js","components/Contacts/Contacts-list.js","components/Contact-form/Contact-form.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","state","value","contacts","filter","dispatch","onChange","evt","contactsActions","target","type","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","contact","includes","items","filteredContacts","onDeleteContact","map","className","onClick","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","placeholder","pattern","title","required","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","actions","createReducer","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.617e2920.chunk.js","sourcesContent":["// import types from \"./contacts-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\nconst deleteContact = createAction(\"contacts/delete\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n\n// const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// });\n\n// const deleteContact = (contactId) => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// const changeFilter = (value) => ({\n//   type: types.CHANGE_FILTER,\n//   payload: value,\n// });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../redux/contacts/contacts-actions\";\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange}></input>\n  </label>\n);\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (evt) => dispatch(contactsActions.changeFilter(evt.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nconst ContactsList = ({ filteredContacts, onDeleteContact }) => (\n  <ul>\n    {filteredContacts.map(({ name, number, id }) => (\n      <li key={id} className=\"TodoList__item\">\n        <p>\n          {name} : {number}\n        </p>\n        <button onClick={() => onDeleteContact(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst getFilteredContacts = (allContacts, filter) => {\n  // const { filter, contacts } = this.state;\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  filteredContacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n\n// const mapStateToProps = state => {\n//   const { filter, contacts } = state.phonebook;\n//   // const normalizedFilter = filter.toLowerCase();\n\n//   const filteredContacts = getFilteredContacts(contacts, filter) // getFilteredContacts=contacts.filter((contact) => contact.name.toLowerCase().includes(normalizedFilter));\n\n//  return {filteredContacts: filteredContacts}\n// }\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n// import './TodoList.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name, number } = this.state;\n    // console.log({ name }, { number });\n\n    this.props.onSubmit(name, number);\n    // console.log(name , number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            value={this.state.name}\n            onChange={this.handleChange}\n            placeholder=\"Name\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\" \"\n            required\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsActions.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import Filter from \"./components/Filter\";\nimport ContactsList from \"./components/Contacts/Contacts-list\";\nimport ContactForm from \"./components/Contact-form/Contact-form\";\n\nconst App = () => (\n  <div>\n    <h1>Phonebook</h1>\n    <ContactForm />\n\n    <h2>Contacts</h2>\n    <Filter />\n\n    <ContactsList />\n  </div>\n);\n\nexport default App;\n\n// import { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// addContact = (name, number) => {\n//   const contact = {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   };\n\n//   const contactNames = this.state.contacts.map((contact) => contact.name);\n//   this.renderContacts(contactNames, contact.name, contact);\n// };\n\n// renderContacts = (contactsList, contactName, newContact) => {\n//   if (contactsList.includes(contactName)) {\n//     alert(`${contactName} is already in contacts`);\n//   } else {\n//     this.setState(({ contacts }) => ({\n//       contacts: [newContact, ...contacts],\n//     }));\n//   }\n// };\n\n// deleteContact = (contactId) => {\n//   this.setState((prevState) => ({\n//     contacts: prevState.contacts.filter(\n//       (contact) => contact.id !== contactId\n//     ),\n//   }));\n// };\n\n// changeFilter = (evt) => {\n//   this.setState({ filter: evt.currentTarget.value });\n// };\n\n// reset = () => {\n//   this.setState({ name: \"\", number: \"\" });\n// };\n\n//render() {\n// const { filter } = this.state;\n// // console.log(filter);\n\n// const normalizedFilter = this.state.filter.toLocaleLowerCase();\n// // console.log(normalizedFilter);\n\n// const filteredContacts = this.state.contacts.filter((contact) =>\n//   contact.name.toLowerCase().includes(normalizedFilter)\n// );}\n\n// componentDidMount() {\n//   // console.log(\"componentDidMount\");\n\n//   const contacts = localStorage.getItem(\"contacts\");\n//   const parsedContacts = JSON.parse(contacts);\n\n//   if (parsedContacts) {\n//     this.setState({ contacts: parsedContacts });\n//   }\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   // console.log(\"componentDidUpdate\");\n\n//   if (this.state.contacts !== prevState.contacts) {\n//     // console.log(\"Refresh page\");\n\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport actions from \"./contacts-actions\";\n// import types from \"./contacts-types\";\n\nconsole.log(actions.addContact.type);\n\nconst names = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst items = createReducer(([] = names), {\n  [actions.addContact]: (state, { payload }) => {\n    if (state.map(({ name }) => name).includes(payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n    }\n    return [payload, ...state];\n  },\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// const items = (\n//   state = names,\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n\n//     case types.DELETE:\n//       return state.filter((contact) => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n// import { createStore, combineReducers } from \"redux\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, contactsReducer)\n// })\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}